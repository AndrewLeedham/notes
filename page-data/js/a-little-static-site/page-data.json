{"componentChunkName":"component---node-modules-gatsby-theme-kb-src-templates-topic-js","path":"/js/a-little-static-site","result":{"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"A small static page generator for Node\"), mdx(\"p\", null, \"With HTML/JS as your output, it can be very tempting to write a single web page in just a single \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".html\"), \" file. HTML definitely feels like an \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"output\"), \" format, you get OK tooling support in VS Code but there's very little abstractions in the language to do anything re-usable. So, nearly all of the time it pays off to add build tooling.\"), mdx(\"p\", null, \"The last single-page mini-site I built, \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://shikijs.github.io/twoslash/\"\n  }, \"shiki-twoslash's homepage\"), \", using Next.js and while that is a slick setup. It's overkill for a single page. For example, I had to post-process their output to remove a bunch of JavaScript. I wasn't using the tool for what it was made for. I've built sites big and small with Gatsby, Next.js, Jekyll, 11ty etc and they all have their place in generating static sites. \"), mdx(\"p\", null, \"For a project I was looking at, I needed to keep everything as vanilla as possible. So, Node, not Deno, npm not pnpm etc. Every extra dependency is a weight, and I asked myself is a the absolute minimal approach to building a static HTML page with useful tooling? I didn't want to reach for any existing SSGs because the abstraction overhead for a single page doesn't feel worth it.\"), mdx(\"h2\", null, \"Requirements\"), mdx(\"p\", null, \"Things I'd need:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"IDE-level assistance\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A good templating system to allow code re-use\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Saving and seeing the changes\")), mdx(\"p\", null, \"For \\\"IDE-level assistance\\\", I can use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"// @ts-check\"), \" to get good enough tooling support in a JS file. There's not enough value for TypeScript in basically a single file project. \"), mdx(\"p\", null, \"A good templating system turned out to be JSX, no-one else gets as high quality tooling because no-one else has the TypeScript team supporting their templating system as a first class citizen. This introduces a problem though, your JS files need a compile step.\"), mdx(\"p\", null, \"Finally, I need a way to save a file in my editor and see the changes. It doesn't need to be hot module reloading (there's no JS in the output anyway) but it should be fast enough.\"), mdx(\"h2\", null, \"Result\"), mdx(\"p\", null, \"We're going to build a dev server in node, which triggers rendering some JSX files to a static HTML file on saves. To do that, we'll need some dependencies:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.npmjs.com/package/esbuild\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"esbuild\")), \" for JSX -> JS\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.npmjs.com/package/react\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"react\")), \" for a JSX runtime\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.npmjs.com/package/react-dom\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"react-dom\")), \" for JSX -> HTML\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.npmjs.com/package/ws\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"ws\")), \" for a server-side websocket\")), mdx(\"p\", null, \"The folder structure will look like:\"), mdx(\"pre\", {\n    \"className\": \"shiki github-light\",\n    \"style\": {\n      \"backgroundColor\": \"#fff\",\n      \"color\": \"#24292e\"\n    }\n  }, mdx(\"div\", {\n    parentName: \"pre\",\n    \"className\": \"code-container\"\n  }, mdx(\"code\", {\n    parentName: \"div\"\n  }, mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"undefined\"\n    }\n  }, \"\\u276F tree .\\n.\\n\\u251C\\u2500\\u2500 index.html\\n\\u251C\\u2500\\u2500 node_modules\\n\\u251C\\u2500\\u2500 package.json\\n\\u2514\\u2500\\u2500 src\\n    \\u251C\\u2500\\u2500 build.jsx\\n    \\u251C\\u2500\\u2500 components.jsx\\n    \\u2514\\u2500\\u2500 server.js\"))))), mdx(\"p\", null, \"With a root \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"index.html\"), \" being the output page, and all the JS living inside the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"src\"), \" dir. We'll be focusing on \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"src/server.js\"), \".\"), mdx(\"h2\", null, \"Building the HTML\"), mdx(\"undefined\", null), mdx(\"p\", null, \"I'm writing ESM, so I can't rely on clearing the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://bambielli.com/til/2017-04-30-node-require-cache/\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"require.cache\")), \" to force the current process to re-evaluate changed JS inside Node. So, the hacky, but a wee bit slower method is to shell out each time:\"), mdx(\"pre\", {\n    \"className\": \"shiki github-light with-title twoslash lsp\",\n    \"style\": {\n      \"backgroundColor\": \"#fff\",\n      \"color\": \"#24292e\"\n    },\n    \"title\": \"src/server.js\"\n  }, mdx(\"div\", {\n    parentName: \"pre\",\n    \"className\": \"code-title\"\n  }, \"src/server.js\"), mdx(\"div\", {\n    parentName: \"pre\",\n    \"className\": \"language-id\"\n  }, \"ts\"), mdx(\"div\", {\n    parentName: \"pre\",\n    \"className\": \"code-container\"\n  }, mdx(\"code\", {\n    parentName: \"div\"\n  }, mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6A737D\"\n    }\n  }, \"// Convert and run the 'app' code\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"const\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6F42C1\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"const build: () => void\"\n  }, \"build\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"=\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" () \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"=>\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" {\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"  \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"const\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#005CC5\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"const tmpFile: string\"\n  }, \"tmpFile\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"=\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6F42C1\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(alias) join(...paths: string[]): string\\nimport join\"\n  }, \"join\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6F42C1\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(alias) tmpdir(): string\\nimport tmpdir\"\n  }, \"tmpdir\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"(), \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"\\\"tc39-template.js\\\"\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \")\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, \"\\xA0\"), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"  \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6A737D\"\n    }\n  }, \"// JSX -> JS, then evaluate that output in node\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"  \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"try\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" {\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"    \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6F42C1\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(alias) execSync(command: string): Buffer (+3 overloads)\\nimport execSync\"\n  }, \"execSync\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"`npm run esbuild --log-level=warning --platform=node --bundle src/build.jsx --outfile=${\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"const tmpFile: string\"\n  }, \"tmpFile\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"}`\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \")\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"    \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6F42C1\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(alias) execSync(command: string): Buffer (+3 overloads)\\nimport execSync\"\n  }, \"execSync\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"`node ${\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"const tmpFile: string\"\n  }, \"tmpFile\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"}`\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \")\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"  } \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"catch\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" (\", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(local var) error: any\"\n  }, \"error\"), \") {\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"    \", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"var console: Console\"\n  }, \"console\"), \".\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6F42C1\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)\"\n  }, \"log\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"(\", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(local var) error: any\"\n  }, \"error\"), \")\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"  }\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"}\"))))), mdx(\"p\", null, \"Next we need to keep track of when a file changes, and trigger that function:\"), mdx(\"pre\", {\n    \"className\": \"shiki github-light with-title twoslash lsp\",\n    \"style\": {\n      \"backgroundColor\": \"#fff\",\n      \"color\": \"#24292e\"\n    },\n    \"title\": \"src/server.js\"\n  }, mdx(\"div\", {\n    parentName: \"pre\",\n    \"className\": \"code-title\"\n  }, \"src/server.js\"), mdx(\"div\", {\n    parentName: \"pre\",\n    \"className\": \"language-id\"\n  }, \"ts\"), mdx(\"div\", {\n    parentName: \"pre\",\n    \"className\": \"code-container\"\n  }, mdx(\"code\", {\n    parentName: \"div\"\n  }, mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6A737D\"\n    }\n  }, \"// FS watcher on the src dir which triggers a re-build, and then tells\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6A737D\"\n    }\n  }, \"// any connected webpages to reload.\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6F42C1\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(alias) watch(filename: PathLike, listener?: ((event: \\\"rename\\\" | \\\"change\\\", filename: string) => any) | undefined): FSWatcher (+3 overloads)\\nimport watch\"\n  }, \"watch\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"\\\"./src\\\"\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \", () \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"=>\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" {\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"  \", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(alias) (property) stdout: WriteStream & {\\n    fd: 1;\\n}\\nimport stdout\"\n  }, \"stdout\"), \".\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6F42C1\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(method) Socket.write(buffer: string | Uint8Array, cb?: ((err?: Error | undefined) => void) | undefined): boolean (+1 overload)\"\n  }, \"write\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"\\\".\\\"\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \");\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"  \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6F42C1\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"function build(): void\"\n  }, \"build\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"()\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"});\"))))), mdx(\"p\", null, \"Yeah, good fs watching primitives ship with node. The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"watch\"), \" function in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"fs\"), \" is good enough for the TypeScript compiler, so it's good enough for me. If you want a better one, \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/microsoft/TypeScript-Website/issues/130#issuecomment-664673740\"\n  }, \"look at watchman\"), \" which I use in the TS website.\"), mdx(\"h2\", null, \"Build Script\"), mdx(\"p\", null, \"This will convert a JSX tree to HTML, it doesn't build it in a way which allows for using the React component APIs, but I don't want to be building JS powered experiences when HTML will do:\"), mdx(\"pre\", {\n    \"className\": \"shiki github-light with-title twoslash lsp\",\n    \"style\": {\n      \"backgroundColor\": \"#fff\",\n      \"color\": \"#24292e\"\n    },\n    \"title\": \"src/build.jsx\"\n  }, mdx(\"div\", {\n    parentName: \"pre\",\n    \"className\": \"code-title\"\n  }, \"src/build.jsx\"), mdx(\"div\", {\n    parentName: \"pre\",\n    \"className\": \"language-id\"\n  }, \"jsx\"), mdx(\"div\", {\n    parentName: \"pre\",\n    \"className\": \"code-container\"\n  }, mdx(\"code\", {\n    parentName: \"div\"\n  }, mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6A737D\"\n    }\n  }, \"// @ts-check\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"import\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"import ReactDOMServer\"\n  }, \"ReactDOMServer\"), \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"from\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"'react-dom/server'\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \";\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"import\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" {\", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"import writeFileSync\"\n  }, \"writeFileSync\"), \"} \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"from\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"\\\"fs\\\"\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, \"\\xA0\"), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"const\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6F42C1\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"const Page: () => JSX.Element\"\n  }, \"Page\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"=\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" () \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"=>\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" <\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#22863A\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(property) JSX.IntrinsicElements.html: React.DetailedHTMLProps<React.HtmlHTMLAttributes<HTMLHtmlElement>, HTMLHtmlElement>\"\n  }, \"html\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \">\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"    <\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#22863A\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(property) JSX.IntrinsicElements.head: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadElement>, HTMLHeadElement>\"\n  }, \"head\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \">\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"        <\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#22863A\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(property) JSX.IntrinsicElements.title: React.DetailedHTMLProps<React.HTMLAttributes<HTMLTitleElement>, HTMLTitleElement>\"\n  }, \"title\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \">My web page</\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#22863A\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(property) JSX.IntrinsicElements.title: React.DetailedHTMLProps<React.HTMLAttributes<HTMLTitleElement>, HTMLTitleElement>\"\n  }, \"title\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \">\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"      </\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#22863A\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(property) JSX.IntrinsicElements.head: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadElement>, HTMLHeadElement>\"\n  }, \"head\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \">\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"    <\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#22863A\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(property) JSX.IntrinsicElements.body: React.DetailedHTMLProps<React.HTMLAttributes<HTMLBodyElement>, HTMLBodyElement>\"\n  }, \"body\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \">\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"        <\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#22863A\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(property) JSX.IntrinsicElements.p: React.DetailedHTMLProps<React.HTMLAttributes<HTMLParagraphElement>, HTMLParagraphElement>\"\n  }, \"p\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \">Hello, world</\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#22863A\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(property) JSX.IntrinsicElements.p: React.DetailedHTMLProps<React.HTMLAttributes<HTMLParagraphElement>, HTMLParagraphElement>\"\n  }, \"p\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \">\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"    </\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#22863A\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(property) JSX.IntrinsicElements.body: React.DetailedHTMLProps<React.HTMLAttributes<HTMLBodyElement>, HTMLBodyElement>\"\n  }, \"body\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \">\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"</\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#22863A\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(property) JSX.IntrinsicElements.html: React.DetailedHTMLProps<React.HtmlHTMLAttributes<HTMLHtmlElement>, HTMLHtmlElement>\"\n  }, \"html\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \">\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, \"\\xA0\"), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"const\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#005CC5\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"const html: string\"\n  }, \"html\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"=\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"import ReactDOMServer\"\n  }, \"ReactDOMServer\"), \".\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6F42C1\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"function renderToStaticMarkup(element: React.ReactElement<any, string | React.JSXElementConstructor<any>>): string\"\n  }, \"renderToStaticMarkup\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"(<\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#005CC5\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"const Page: () => JSX.Element\"\n  }, \"Page\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" />)\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6F42C1\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"import writeFileSync\"\n  }, \"writeFileSync\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"\\\"./index.html\\\"\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \", \", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"const html: string\"\n  }, \"html\"), \")\"))))), mdx(\"p\", null, \"This is enough to get started. You can start the server by running \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"node src/server.js\"), \" and pressing save in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"src\"), \" dir will re-build the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"index.html\"), \".\"), mdx(\"h2\", null, \"Build and Refresh\"), mdx(\"p\", null, \"This is good enough, but I want comfortable. So, I'd like the browsers to refresh when I press save. This means there needs to be a websocket connecting the browser to the dev server, and we need to send a message from the server to clients to update.\"), mdx(\"p\", null, \"To start off, we'll switch to making a http server, while you might think to reach for express/koa/fastify - the one in Node is good enough for TypeScript, and so it's good enough for me. Let's make a server which responds with the HTML for your file:\"), mdx(\"pre\", {\n    \"className\": \"shiki github-light with-title twoslash lsp\",\n    \"style\": {\n      \"backgroundColor\": \"#fff\",\n      \"color\": \"#24292e\"\n    },\n    \"title\": \"src/server.js\"\n  }, mdx(\"div\", {\n    parentName: \"pre\",\n    \"className\": \"code-title\"\n  }, \"src/server.js\"), mdx(\"div\", {\n    parentName: \"pre\",\n    \"className\": \"language-id\"\n  }, \"js\"), mdx(\"div\", {\n    parentName: \"pre\",\n    \"className\": \"code-container\"\n  }, mdx(\"code\", {\n    parentName: \"div\"\n  }, mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"import\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" { \", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(alias) function watch(filename: PathLike, options: {\\n    encoding?: BufferEncoding | null;\\n    persistent?: boolean;\\n    recursive?: boolean;\\n} | BufferEncoding | undefined | null, listener?: ((event: \\\"rename\\\" | \\\"change\\\", filename: string) => void) | undefined): FSWatcher (+3 overloads)\\nimport watch\"\n  }, \"watch\"), \", \", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(alias) function readFileSync(path: PathLike | number, options?: {\\n    encoding?: null | undefined;\\n    flag?: string | undefined;\\n} | null | undefined): Buffer (+2 overloads)\\nimport readFileSync\"\n  }, \"readFileSync\"), \" } \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"from\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"\\\"fs\\\"\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"import\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" { \", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(alias) function createServer(requestListener?: RequestListener | undefined): Server (+1 overload)\\nimport createServer\"\n  }, \"createServer\"), \" } \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"from\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"\\\"http\\\"\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, \"\\xA0\"), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6A737D\"\n    }\n  }, \"// Starts up a HTTP server which passes along the html\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"const\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#005CC5\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"const server: Server\"\n  }, \"server\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"=\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6F42C1\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(alias) createServer(requestListener?: RequestListener | undefined): Server (+1 overload)\\nimport createServer\"\n  }, \"createServer\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"function\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" (\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#E36209\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(parameter) req: IncomingMessage\"\n  }, \"req\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \", \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#E36209\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(parameter) res: ServerResponse\"\n  }, \"res\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \") {\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"  \", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(parameter) res: ServerResponse\"\n  }, \"res\"), \".\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6F42C1\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(method) ServerResponse.writeHead(statusCode: number, headers?: OutgoingHttpHeaders | OutgoingHttpHeader[] | undefined): ServerResponse (+1 overload)\"\n  }, \"writeHead\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#005CC5\"\n    }\n  }, \"200\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \", {\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"'Content-Type'\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \": \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"'text/html'\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"});\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"  \", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(parameter) res: ServerResponse\"\n  }, \"res\"), \".\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6F42C1\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(method) internal.Writable.write(chunk: any, cb?: ((error: Error | null | undefined) => void) | undefined): boolean (+1 overload)\"\n  }, \"write\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6F42C1\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(alias) readFileSync(path: number | PathLike, options: BufferEncoding | {\\n    encoding: BufferEncoding;\\n    flag?: string | undefined;\\n}): string (+2 overloads)\\nimport readFileSync\"\n  }, \"readFileSync\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"\\\"./index.html\\\"\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \", \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"\\\"utf8\\\"\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"));\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"  \", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(parameter) res: ServerResponse\"\n  }, \"res\"), \".\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6F42C1\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(method) internal.Writable.end(cb?: (() => void) | undefined): void (+2 overloads)\"\n  }, \"end\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"();\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"}).\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6F42C1\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(method) Server.listen(port?: number | undefined, hostname?: string | undefined, backlog?: number | undefined, listeningListener?: (() => void) | undefined): Server (+8 overloads)\"\n  }, \"listen\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#005CC5\"\n    }\n  }, \"8080\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \");\"))))), mdx(\"p\", null, \"I looked into what the websocket support looks like in Node, and it's something I'd have had to build myself and I'm certainly not doing that. So, we can use \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/websockets/ws\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"ws\")), \" as a dependency here, I used it in Peril and it has no dependencies.\"), mdx(\"pre\", {\n    \"className\": \"shiki github-light with-title twoslash lsp\",\n    \"style\": {\n      \"backgroundColor\": \"#fff\",\n      \"color\": \"#24292e\"\n    },\n    \"title\": \"src/server.js\"\n  }, mdx(\"div\", {\n    parentName: \"pre\",\n    \"className\": \"code-title\"\n  }, \"src/server.js\"), mdx(\"div\", {\n    parentName: \"pre\",\n    \"className\": \"language-id\"\n  }, \"js\"), mdx(\"div\", {\n    parentName: \"pre\",\n    \"className\": \"code-container\"\n  }, mdx(\"code\", {\n    parentName: \"div\"\n  }, mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"import\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" { \", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(alias) function createServer(requestListener?: RequestListener | undefined): Server (+1 overload)\\nimport createServer\"\n  }, \"createServer\"), \" } \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"from\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"\\\"http\\\"\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"import\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" { \", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(alias) (property) stdout: WriteStream & {\\n    fd: 1;\\n}\\nimport stdout\"\n  }, \"stdout\"), \" } \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"from\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"\\\"process\\\"\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \";\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"import\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" { \", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(alias) class Server\\nimport Server\"\n  }, \"Server\"), \" } \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"from\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"'ws'\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \";\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, \"\\xA0\"), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6A737D\"\n    }\n  }, \"// ...\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, \"\\xA0\"), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6A737D\"\n    }\n  }, \"// Create a websocket, and file watcher so that pressing save in the index\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6A737D\"\n    }\n  }, \"// triggers a browser reload, letting you edit without jumping over and\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6A737D\"\n    }\n  }, \"// refreshing.\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"const\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#005CC5\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"const wss: Server\"\n  }, \"wss\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"=\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"new\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6F42C1\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(alias) new Server(options?: WebSocket.ServerOptions | undefined, callback?: (() => void) | undefined): Server\\nimport Server\"\n  }, \"Server\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"({ \", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(property) WebSocket.ServerOptions.server?: Server | Server | undefined\"\n  }, \"server\"), \" });\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"var console: Console\"\n  }, \"console\"), \".\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6F42C1\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)\"\n  }, \"log\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"\\\"Started up dev server: http://localhost:8080\\\"\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \")\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, \"\\xA0\"), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6A737D\"\n    }\n  }, \"// FS watcher on the src dir which triggers a re-build, and then tells\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6A737D\"\n    }\n  }, \"// any connected webpages to reload.\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6F42C1\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"any\"\n  }, \"watch\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"\\\"./src\\\"\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \", () \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"=>\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" {\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"  \", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(alias) (property) stdout: WriteStream & {\\n    fd: 1;\\n}\\nimport stdout\"\n  }, \"stdout\"), \".\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6F42C1\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(method) Socket.write(buffer: string | Uint8Array, cb?: ((err?: Error | undefined) => void) | undefined): boolean (+1 overload)\"\n  }, \"write\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"\\\".\\\"\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \");\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"  \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6F42C1\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"any\"\n  }, \"build\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"()\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, \"\\xA0\"), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"  \", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"const wss: Server\"\n  }, \"wss\"), \".\", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(property) WebSocket.Server.clients: Set<WebSocket>\"\n  }, \"clients\"), \".\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6F42C1\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(method) Set<WebSocket>.forEach(callbackfn: (value: WebSocket, value2: WebSocket, set: Set<WebSocket>) => void, thisArg?: any): void\"\n  }, \"forEach\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#E36209\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(parameter) client: WebSocket\"\n  }, \"client\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"=>\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(parameter) client: WebSocket\"\n  }, \"client\"), \".\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6F42C1\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(method) WebSocket.send(data: any, cb?: ((err?: Error | undefined) => void) | undefined): void (+1 overload)\"\n  }, \"send\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"\\\"reload\\\"\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"))\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"});\"))))), mdx(\"p\", null, \"That's the server set up, it can now load up a dev server and file watcher. Changes to the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"./src/*\"), \" files trigger any connected clients to refresh.\"), mdx(\"p\", null, \"Here's \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"./src/server.js\"), \" in full:\"), mdx(\"pre\", {\n    \"className\": \"shiki github-light twoslash lsp\",\n    \"style\": {\n      \"backgroundColor\": \"#fff\",\n      \"color\": \"#24292e\"\n    }\n  }, mdx(\"div\", {\n    parentName: \"pre\",\n    \"className\": \"language-id\"\n  }, \"js\"), mdx(\"div\", {\n    parentName: \"pre\",\n    \"className\": \"code-container\"\n  }, mdx(\"code\", {\n    parentName: \"div\"\n  }, mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"import\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" { \", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(alias) function execSync(command: string): Buffer (+3 overloads)\\nimport execSync\"\n  }, \"execSync\"), \" } \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"from\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"\\\"child_process\\\"\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \";\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"import\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" { \", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(alias) function watch(filename: PathLike, options: {\\n    encoding?: BufferEncoding | null;\\n    persistent?: boolean;\\n    recursive?: boolean;\\n} | BufferEncoding | undefined | null, listener?: ((event: \\\"rename\\\" | \\\"change\\\", filename: string) => void) | undefined): FSWatcher (+3 overloads)\\nimport watch\"\n  }, \"watch\"), \", \", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(alias) function readFileSync(path: PathLike | number, options?: {\\n    encoding?: null | undefined;\\n    flag?: string | undefined;\\n} | null | undefined): Buffer (+2 overloads)\\nimport readFileSync\"\n  }, \"readFileSync\"), \" } \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"from\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"\\\"fs\\\"\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"import\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" { \", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(alias) function createServer(requestListener?: RequestListener | undefined): Server (+1 overload)\\nimport createServer\"\n  }, \"createServer\"), \" } \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"from\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"\\\"http\\\"\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"import\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" { \", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(alias) function tmpdir(): string\\nimport tmpdir\"\n  }, \"tmpdir\"), \" } \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"from\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"\\\"os\\\"\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \";\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"import\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" { \", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(alias) (method) join(...paths: string[]): string\\nimport join\"\n  }, \"join\"), \" } \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"from\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"\\\"path\\\"\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \";\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"import\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" { \", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(alias) (property) stdout: WriteStream & {\\n    fd: 1;\\n}\\nimport stdout\"\n  }, \"stdout\"), \" } \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"from\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"\\\"process\\\"\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \";\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"import\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" { \", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(alias) class Server\\nimport Server\"\n  }, \"Server\"), \" } \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"from\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"'ws'\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \";\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, \"\\xA0\"), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6A737D\"\n    }\n  }, \"// Convert and run the 'app' code\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"const\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6F42C1\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"const build: () => void\"\n  }, \"build\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"=\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" () \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"=>\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" {\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"  \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6A737D\"\n    }\n  }, \"// We can't edit the require cache in ESM, so this needs to run through\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"  \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6A737D\"\n    }\n  }, \"// a new process each time.\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"  \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"const\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#005CC5\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"const tmpFile: string\"\n  }, \"tmpFile\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"=\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6F42C1\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(alias) join(...paths: string[]): string\\nimport join\"\n  }, \"join\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6F42C1\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(alias) tmpdir(): string\\nimport tmpdir\"\n  }, \"tmpdir\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"(), \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"\\\"tc39-template.js\\\"\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \")\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, \"\\xA0\"), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"  \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6A737D\"\n    }\n  }, \"// JSX -> JS, then evaluate that in node\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"  \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"try\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" {\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"    \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6F42C1\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(alias) execSync(command: string): Buffer (+3 overloads)\\nimport execSync\"\n  }, \"execSync\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"`yarn esbuild --log-level=warning --platform=node --bundle src/build.jsx --outfile=${\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"const tmpFile: string\"\n  }, \"tmpFile\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"}`\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \")\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"    \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6F42C1\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(alias) execSync(command: string): Buffer (+3 overloads)\\nimport execSync\"\n  }, \"execSync\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"`node ${\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"const tmpFile: string\"\n  }, \"tmpFile\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"}`\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \")\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"  } \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"catch\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" (\", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(local var) error: any\"\n  }, \"error\"), \") {\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"    \", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"var console: Console\"\n  }, \"console\"), \".\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6F42C1\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)\"\n  }, \"log\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"(\", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(local var) error: any\"\n  }, \"error\"), \")\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"  }\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"}\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, \"\\xA0\"), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6A737D\"\n    }\n  }, \"// Starts up a HTTP server which builds the site each time it is requested \")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"const\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#005CC5\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"const server: Server\"\n  }, \"server\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"=\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6F42C1\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(alias) createServer(requestListener?: RequestListener | undefined): Server (+1 overload)\\nimport createServer\"\n  }, \"createServer\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"function\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" (\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#E36209\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(parameter) req: IncomingMessage\"\n  }, \"req\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \", \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#E36209\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(parameter) res: ServerResponse\"\n  }, \"res\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \") {\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"  \", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(parameter) res: ServerResponse\"\n  }, \"res\"), \".\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6F42C1\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(method) ServerResponse.writeHead(statusCode: number, headers?: OutgoingHttpHeaders | OutgoingHttpHeader[] | undefined): ServerResponse (+1 overload)\"\n  }, \"writeHead\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#005CC5\"\n    }\n  }, \"200\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \", {\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"'Content-Type'\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \": \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"'text/html'\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"});\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"  \", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(parameter) res: ServerResponse\"\n  }, \"res\"), \".\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6F42C1\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(method) internal.Writable.write(chunk: any, cb?: ((error: Error | null | undefined) => void) | undefined): boolean (+1 overload)\"\n  }, \"write\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6F42C1\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(alias) readFileSync(path: number | PathLike, options: BufferEncoding | {\\n    encoding: BufferEncoding;\\n    flag?: string | undefined;\\n}): string (+2 overloads)\\nimport readFileSync\"\n  }, \"readFileSync\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"\\\"./index.html\\\"\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \", \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"\\\"utf8\\\"\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"));\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"  \", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(parameter) res: ServerResponse\"\n  }, \"res\"), \".\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6F42C1\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(method) internal.Writable.end(cb?: (() => void) | undefined): void (+2 overloads)\"\n  }, \"end\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"();\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"}).\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6F42C1\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(method) Server.listen(port?: number | undefined, hostname?: string | undefined, backlog?: number | undefined, listeningListener?: (() => void) | undefined): Server (+8 overloads)\"\n  }, \"listen\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#005CC5\"\n    }\n  }, \"8080\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \");\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, \"\\xA0\"), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6A737D\"\n    }\n  }, \"// Create a websocket, and file watcher so that pressing save in the index\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6A737D\"\n    }\n  }, \"// triggers a browser reload, letting you edit without jumping over and\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6A737D\"\n    }\n  }, \"// refreshing.\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"const\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#005CC5\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"const wss: Server\"\n  }, \"wss\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"=\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"new\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6F42C1\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(alias) new Server(options?: WebSocket.ServerOptions | undefined, callback?: (() => void) | undefined): Server\\nimport Server\"\n  }, \"Server\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"({ \", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(property) WebSocket.ServerOptions.server?: Server | Server | undefined\"\n  }, \"server\"), \" });\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"var console: Console\"\n  }, \"console\"), \".\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6F42C1\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)\"\n  }, \"log\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"\\\"Started up dev server: http://localhost:8080\\\"\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \")\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, \"\\xA0\"), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6A737D\"\n    }\n  }, \"// FS watcher on the src dir which triggers a re-build, and then tells\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6A737D\"\n    }\n  }, \"// any connected webpages to reload.\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6F42C1\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(alias) watch(filename: PathLike, listener?: ((event: \\\"rename\\\" | \\\"change\\\", filename: string) => any) | undefined): FSWatcher (+3 overloads)\\nimport watch\"\n  }, \"watch\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"\\\"./src\\\"\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \", () \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"=>\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" {\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"  \", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(alias) (property) stdout: WriteStream & {\\n    fd: 1;\\n}\\nimport stdout\"\n  }, \"stdout\"), \".\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6F42C1\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(method) Socket.write(buffer: string | Uint8Array, cb?: ((err?: Error | undefined) => void) | undefined): boolean (+1 overload)\"\n  }, \"write\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"\\\".\\\"\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \");\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"  \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6F42C1\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"const build: () => void\"\n  }, \"build\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"()\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, \"\\xA0\"), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"  \", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"const wss: Server\"\n  }, \"wss\"), \".\", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(property) WebSocket.Server.clients: Set<WebSocket>\"\n  }, \"clients\"), \".\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6F42C1\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(method) Set<WebSocket>.forEach(callbackfn: (value: WebSocket, value2: WebSocket, set: Set<WebSocket>) => void, thisArg?: any): void\"\n  }, \"forEach\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#E36209\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(parameter) client: WebSocket\"\n  }, \"client\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"=>\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(parameter) client: WebSocket\"\n  }, \"client\"), \".\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6F42C1\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(method) WebSocket.send(data: any, cb?: ((err?: Error | undefined) => void) | undefined): void (+1 overload)\"\n  }, \"send\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"\\\"reload\\\"\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"))\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"});\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, \"\\xA0\"), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6A737D\"\n    }\n  }, \"// Trigger a build anyway\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6F42C1\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"const build: () => void\"\n  }, \"build\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"()\"))))), mdx(\"h2\", null, \"Client Side\"), mdx(\"p\", null, \"We need the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"index.html\"), \" to be able to connect back to the websocket dev server, to do that we can use a React component. So, make your first component in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"./src/components.jsx\"), \".\"), mdx(\"pre\", {\n    \"className\": \"shiki github-light twoslash lsp\",\n    \"style\": {\n      \"backgroundColor\": \"#fff\",\n      \"color\": \"#24292e\"\n    }\n  }, mdx(\"div\", {\n    parentName: \"pre\",\n    \"className\": \"language-id\"\n  }, \"jsx\"), mdx(\"div\", {\n    parentName: \"pre\",\n    \"className\": \"code-container\"\n  }, mdx(\"code\", {\n    parentName: \"div\"\n  }, mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6A737D\"\n    }\n  }, \"// @ts-check\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6A737D\"\n    }\n  }, \"/** A websocket connection to the dev server which triggers a reload */\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"export\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"const\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6F42C1\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"const DevWebSocket: () => JSX.Element | null\"\n  }, \"DevWebSocket\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"=\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" () \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"=>\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" {\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"    \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"if\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" (\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"!\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"any\"\n  }, \"process\"), \".\", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"any\"\n  }, \"env\"), \".\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#005CC5\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"any\"\n  }, \"SITE_DEV\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \") {\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"        \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"return\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#005CC5\"\n    }\n  }, \"null\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"    }\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, \"\\xA0\"), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"    \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"const\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#005CC5\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"const js: \\\"\\\\n// Listen for messages telling us to reload\\\\nconst socket = new WebSocket('ws://localhost:8080');\\\\nsocket.addEventListener('message', function (event) {\\\\n    document.location.reload()\\\\n});\\\"\"\n  }, \"js\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"=\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"`\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"// Listen for messages telling us to reload\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"const socket = new WebSocket('ws://localhost:8080');\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"socket.addEventListener('message', function (event) {\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"    document.location.reload()\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"});`\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, \"\\xA0\"), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"    \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"return\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" <\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#22863A\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(property) JSX.IntrinsicElements.script: React.DetailedHTMLProps<React.ScriptHTMLAttributes<HTMLScriptElement>, HTMLScriptElement>\"\n  }, \"script\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6F42C1\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(JSX attribute) React.DOMAttributes<HTMLScriptElement>.dangerouslySetInnerHTML?: {\\n    __html: string;\\n} | undefined\"\n  }, \"dangerouslySetInnerHTML\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"=\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"{{ \", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(property) __html: string\"\n  }, \"__html\"), \": \", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"const js: \\\"\\\\n// Listen for messages telling us to reload\\\\nconst socket = new WebSocket('ws://localhost:8080');\\\\nsocket.addEventListener('message', function (event) {\\\\n    document.location.reload()\\\\n});\\\"\"\n  }, \"js\"), \"}} />\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"}\"))))), mdx(\"p\", null, \"This component NOOPs unless the env var \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"SITE_DEV\"), \" is set up, and it simply jams some JavaScript into the page which connects to the dev server, and on receiving any message it will trigger a reload. This needs importing in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"./src/build.jsx\"), \".\"), mdx(\"pre\", {\n    \"className\": \"shiki github-light with-title twoslash lsp\",\n    \"style\": {\n      \"backgroundColor\": \"#fff\",\n      \"color\": \"#24292e\"\n    },\n    \"title\": \"src/build.jsx\"\n  }, mdx(\"div\", {\n    parentName: \"pre\",\n    \"className\": \"code-title\"\n  }, \"src/build.jsx\"), mdx(\"div\", {\n    parentName: \"pre\",\n    \"className\": \"language-id\"\n  }, \"jsx\"), mdx(\"div\", {\n    parentName: \"pre\",\n    \"className\": \"code-container\"\n  }, mdx(\"code\", {\n    parentName: \"div\"\n  }, mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6A737D\"\n    }\n  }, \"// @ts-check\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"import\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"import ReactDOMServer\"\n  }, \"ReactDOMServer\"), \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"from\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"'react-dom/server'\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \";\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"import\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" {\", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(alias) function writeFileSync(path: PathLike | number, data: string | NodeJS.ArrayBufferView, options?: WriteFileOptions | undefined): void\\nimport writeFileSync\"\n  }, \"writeFileSync\"), \"} \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"from\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"\\\"fs\\\"\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"import\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" {\", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(alias) const DevWebSocket: () => JSX.Element\\nimport DevWebSocket\"\n  }, \"DevWebSocket\"), \"} \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"from\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"\\\"./components.jsx\\\"\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, \"\\xA0\"), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"const\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6F42C1\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"const Page: () => JSX.Element\"\n  }, \"Page\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"=\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" () \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"=>\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" <\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#22863A\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(property) JSX.IntrinsicElements.html: React.DetailedHTMLProps<React.HtmlHTMLAttributes<HTMLHtmlElement>, HTMLHtmlElement>\"\n  }, \"html\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \">\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"    <\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#22863A\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(property) JSX.IntrinsicElements.head: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadElement>, HTMLHeadElement>\"\n  }, \"head\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \">\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"        <\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#22863A\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(property) JSX.IntrinsicElements.title: React.DetailedHTMLProps<React.HTMLAttributes<HTMLTitleElement>, HTMLTitleElement>\"\n  }, \"title\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \">My web page</\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#22863A\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(property) JSX.IntrinsicElements.title: React.DetailedHTMLProps<React.HTMLAttributes<HTMLTitleElement>, HTMLTitleElement>\"\n  }, \"title\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \">\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"        <\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#005CC5\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(alias) const DevWebSocket: () => JSX.Element\\nimport DevWebSocket\"\n  }, \"DevWebSocket\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" />\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"      </\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#22863A\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(property) JSX.IntrinsicElements.head: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadElement>, HTMLHeadElement>\"\n  }, \"head\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \">\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"    <\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#22863A\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(property) JSX.IntrinsicElements.body: React.DetailedHTMLProps<React.HTMLAttributes<HTMLBodyElement>, HTMLBodyElement>\"\n  }, \"body\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \">\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"        <\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#22863A\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(property) JSX.IntrinsicElements.p: React.DetailedHTMLProps<React.HTMLAttributes<HTMLParagraphElement>, HTMLParagraphElement>\"\n  }, \"p\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \">Hello, world</\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#22863A\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(property) JSX.IntrinsicElements.p: React.DetailedHTMLProps<React.HTMLAttributes<HTMLParagraphElement>, HTMLParagraphElement>\"\n  }, \"p\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \">\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"    </\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#22863A\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(property) JSX.IntrinsicElements.body: React.DetailedHTMLProps<React.HTMLAttributes<HTMLBodyElement>, HTMLBodyElement>\"\n  }, \"body\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \">\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"</\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#22863A\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(property) JSX.IntrinsicElements.html: React.DetailedHTMLProps<React.HtmlHTMLAttributes<HTMLHtmlElement>, HTMLHtmlElement>\"\n  }, \"html\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \">\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, \"\\xA0\"), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"const\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#005CC5\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"const html: string\"\n  }, \"html\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"=\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"import ReactDOMServer\"\n  }, \"ReactDOMServer\"), \".\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6F42C1\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"function renderToStaticMarkup(element: React.ReactElement<any, string | React.JSXElementConstructor<any>>): string\"\n  }, \"renderToStaticMarkup\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"(<\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#005CC5\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"const Page: () => JSX.Element\"\n  }, \"Page\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" />)\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6F42C1\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(alias) writeFileSync(path: number | PathLike, data: string | NodeJS.ArrayBufferView, options?: WriteFileOptions | undefined): void\\nimport writeFileSync\"\n  }, \"writeFileSync\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"\\\"./index.html\\\"\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \", \", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"const html: string\"\n  }, \"html\"), \")\"))))), mdx(\"p\", null, \"This means running \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"SITE_ENV=\\\"true\\\" node src/server.js\"), \" will start up a dev server, where pressing save will render the JSX tree to HTML and reload all open web-pages. We did it with very few tools, and ideally understood how all of the pieces came together.\"), mdx(\"h2\", null, \"Moving Inline\"), mdx(\"p\", null, \"With the system working, we can look at making the iterations a bit faster. The slowest parts by far are the two \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"execSync\"), \"s. Let's replace these with in-process work to avoid the loading of a new process, and the node/npm boot times. The easy step is to convert the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"esbuild\"), \" call to the esbuild JavaScript API:\"), mdx(\"pre\", {\n    \"className\": \"shiki github-light\",\n    \"style\": {\n      \"backgroundColor\": \"#fff\",\n      \"color\": \"#24292e\"\n    }\n  }, mdx(\"div\", {\n    parentName: \"pre\",\n    \"className\": \"language-id\"\n  }, \"diff\"), mdx(\"div\", {\n    parentName: \"pre\",\n    \"className\": \"code-container\"\n  }, mdx(\"code\", {\n    parentName: \"div\"\n  }, mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#22863A\"\n    }\n  }, \"+ import { buildSync } from \\\"esbuild\\\";\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#B31D28\"\n    }\n  }, \"- execSync(`npm run esbuild --log-level=warning --platform=node --bundle src/build.jsx --outfile=${tmpFile}`)\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#22863A\"\n    }\n  }, \"+ const result = buildSync({ logLevel: \\\"warning\\\", platform: \\\"node\\\", bundle: true, outfile: tmpFile, entryPoints: ['src/build.jsx'] })\"))))), mdx(\"p\", null, \"That should shave a bit of time off the build process, you're mostly looking at dropping the nodejs bootup for npm and then any \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"npm run\"), \" overhead. Next we need to try run this code inline. Now, I mentioned earlier that we can't use a require cache to import the code, so that's not really doable - but a simpler answer does exist: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"eval\"), \".\"), mdx(\"p\", null, \"To safely eval the code we don't need much. esbuild, bundles and converts our JS to commonjs, which means we need a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"require\"), \" in scope. In ESM Node, we can create our own \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"require\"), \" function via \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"createRequire(import.meta.url)\"), \" which means we can convert our entire build function to:\"), mdx(\"pre\", {\n    \"className\": \"shiki github-light twoslash lsp\",\n    \"style\": {\n      \"backgroundColor\": \"#fff\",\n      \"color\": \"#24292e\"\n    }\n  }, mdx(\"div\", {\n    parentName: \"pre\",\n    \"className\": \"language-id\"\n  }, \"ts\"), mdx(\"div\", {\n    parentName: \"pre\",\n    \"className\": \"code-container\"\n  }, mdx(\"code\", {\n    parentName: \"div\"\n  }, mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"import\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" { \", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(alias) function buildSync(options: BuildOptions & {\\n    write: false;\\n}): BuildResult & {\\n    outputFiles: OutputFile[];\\n} (+1 overload)\\nimport buildSync\"\n  }, \"buildSync\"), \" } \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"from\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"\\\"esbuild\\\"\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"import\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" { \", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(alias) (method) createRequire(path: string | URL): NodeRequire\\nimport createRequire\"\n  }, \"createRequire\"), \" } \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"from\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"'module'\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \";\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, \"\\xA0\"), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6A737D\"\n    }\n  }, \"// Convert and run the 'app' code\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"const\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6F42C1\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"const build: () => void\"\n  }, \"build\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"=\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" () \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"=>\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" {\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"  \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"const\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#005CC5\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"const tmpFile: string\"\n  }, \"tmpFile\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"=\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6F42C1\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(alias) join(...paths: string[]): string\\nimport join\"\n  }, \"join\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6F42C1\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(alias) tmpdir(): string\\nimport tmpdir\"\n  }, \"tmpdir\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"(), \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"\\\"tc39-template.js\\\"\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \")\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, \"\\xA0\"), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"  \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6A737D\"\n    }\n  }, \"// JSX -> JS, then evaluate that in node\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"  \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"const\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#005CC5\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"const result: BuildResult\"\n  }, \"result\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"=\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6F42C1\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(alias) buildSync(options: BuildOptions): BuildResult (+1 overload)\\nimport buildSync\"\n  }, \"buildSync\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"({ \", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(property) CommonOptions.logLevel?: LogLevel | undefined\"\n  }, \"logLevel\"), \": \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"\\\"warning\\\"\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \", \", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(property) BuildOptions.platform?: Platform | undefined\"\n  }, \"platform\"), \": \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"\\\"node\\\"\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \", \", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(property) BuildOptions.bundle?: boolean | undefined\"\n  }, \"bundle\"), \": \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#005CC5\"\n    }\n  }, \"true\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \", \", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(property) BuildOptions.outfile?: string | undefined\"\n  }, \"outfile\"), \": \", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"const tmpFile: string\"\n  }, \"tmpFile\"), \", \", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(property) BuildOptions.entryPoints?: string[] | Record<string, string> | undefined\"\n  }, \"entryPoints\"), \": [\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"'src/build.jsx'\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"] })\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"  \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"if\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" (\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"!\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"const result: BuildResult\"\n  }, \"result\"), \".\", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(property) BuildResult.errors: Message[]\"\n  }, \"errors\"), \".\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#005CC5\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(property) Array<Message>.length: number\"\n  }, \"length\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \") {\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"    \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"try\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" {\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"      \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"const\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#005CC5\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"const require: NodeRequire\"\n  }, \"require\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"=\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6F42C1\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(alias) createRequire(path: string | URL): NodeRequire\\nimport createRequire\"\n  }, \"createRequire\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"import\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \".\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#005CC5\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"any\"\n  }, \"meta\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \".\", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(property) ImportMeta.url: string\"\n  }, \"url\"), \");\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"      \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#005CC5\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"function eval(x: string): any\"\n  }, \"eval\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6F42C1\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(alias) readFileSync(path: number | PathLike, options: BufferEncoding | {\\n    encoding: BufferEncoding;\\n    flag?: string | undefined;\\n}): string (+2 overloads)\\nimport readFileSync\"\n  }, \"readFileSync\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"(\", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"const tmpFile: string\"\n  }, \"tmpFile\"), \", \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"\\\"utf8\\\"\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"))\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"    } \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"catch\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" (\", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(local var) error: any\"\n  }, \"error\"), \") {\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"      \", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"var console: Console\"\n  }, \"console\"), \".\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6F42C1\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)\"\n  }, \"log\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"(\", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(local var) error: any\"\n  }, \"error\"), \") \")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"    }\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"  }\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"}\"))))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"","private":false},"outboundReferences":[],"inboundReferences":[]},"fields":{"slug":"/js/a-little-static-site","title":"A small static page generator for Node"}}},"pageContext":{"id":"ac1c94fd-b194-55c1-8e3f-8385fe8cf498","refWordMdxSlugDict":{}}},"staticQueryHashes":["2221750479","2380733210","2768355698","63159454","847517413"]}