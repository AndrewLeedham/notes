{"componentChunkName":"component---node-modules-gatsby-theme-kb-src-templates-topic-js","path":"/js/yarn-workspaces","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Yarn Workspaces\"), mdx(\"p\", null, \"An abstraction absolutely worth learning, npm has replicated the feature in \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.npmjs.com/cli/v7/using-npm/workspaces\"\n  }, \"npm 7\"), \".\"), mdx(\"p\", null, \"A yarn workspace is a way to chunk code together in a single repo. Some examples of how I use them:\"), mdx(\"h4\", null, \"TypeScript Website\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A section of docs is a workspace: handbook docs, tsconfig flags, codegen systems\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Individual npm modules like: @typescript/twoslash, gatsby-remark-twoslash-shiki, etc \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sections of the TS website which are imported as oldschool \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"<script>\"), \" tags: playground, sandbox\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The static site generator itself\")), mdx(\"h4\", null, \"Capture\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Azure functions\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Admin Dashboard \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"KISS Homepage\")), mdx(\"h4\", null, \"Puzzlebox\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Games\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Web infra\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"","private":false},"outboundReferences":[],"inboundReferences":[{"contextLine":"- [[yarn-workspaces]]","referrer":{"__typename":"Mdx","parent":{"__typename":"File","id":"f8ce06d8-ba4a-54da-93a4-a5b020ef0638","fields":{"slug":"/js/yarn-vs-npm","title":"yarn-vs-npm"}}}}]},"fields":{"slug":"/js/yarn-workspaces","title":"yarn-workspaces"}}},"pageContext":{"id":"e6db630f-e3d9-522e-9f96-cba145c804e8"}},"staticQueryHashes":["2221750479","2380733210","2768355698","433046095","63159454"]}