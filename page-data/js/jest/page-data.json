{"componentChunkName":"component---node-modules-gatsby-theme-kb-src-templates-topic-js","path":"/js/jest","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Jest Testing Suite\"), mdx(\"p\", null, \"Jest killed any enthusiasm I had for testing in iOS codebases and offered a surprisingly focused set of APIs which really do make testing a delight. To really understand Jest, I started \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://marketplace.visualstudio.com/items?itemName=Orta.vscode-jest\"\n  }, \"vscode-jest\"), \" which aimed to tightly integrate your tests into your editor.\"), mdx(\"h3\", null, \"Things I Like\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The care and effort into all of the matchers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Snapshots, and \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"especially\"), \" inline Snapshots\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"How parallel test suite ordering works\")), mdx(\"h3\", null, \"Notes\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"How I do \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"tests/testing-js\",\n    \"title\": \"tests/testing-js\"\n  }, \"[[tests/testing-js]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"I enjoy inline snapshot tests \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"tests/inline-snapshots\",\n    \"title\": \"tests/inline-snapshots\"\n  }, \"[[tests/inline-snapshots]]\"), \"\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"","private":false},"outboundReferences":[],"inboundReferences":[]},"fields":{"slug":"/js/jest","title":"Jest Testing Suite"}}},"pageContext":{"id":"d0cc196a-2708-56d9-8c0c-b3cc31e5cc3d"}},"staticQueryHashes":["2221750479","2380733210","2768355698","63159454","847517413"]}