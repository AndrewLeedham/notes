{"componentChunkName":"component---node-modules-gatsby-theme-kb-src-templates-topic-js","path":"/apps/pretty-json-parsers","result":{"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h3\", null, \"Pretty JSON Parsers\"), mdx(\"p\", null, \"In helping to move \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://artsy.github.io/blog/2017/02/05/Retrospective-Swift-at-Artsy/\"\n  }, \"Artsy to React Native\"), \", I came to the conclusion that our native app was just a pretty JSON parser. \"), mdx(\"p\", null, \"Outside of games, I'd argue that most native apps are pretty JSON parsers. Which is why things like React Native and Flutter which are better toolchains for making those kind of apps are making such strong inroads. Pretty JSON Parser favour code which is easy to change, fast to iterate and very high level code.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"","private":false},"outboundReferences":[],"inboundReferences":[{"contextLine":"The size also accounts for the types of things people want to build, there's a lot of people who just want to build websites which fast and are basically [[apps/pretty-json-parsers]] and there's a lot of people wanting to replicate native app level experiences in a webpage. There's constant tension between","referrer":{"parent":{"id":"5369d1cc-95b5-58ed-b190-bc6f7140afa6","fields":{"slug":"/js/about","title":"About JavaScript"}}}}]},"fields":{"slug":"/apps/pretty-json-parsers","title":"pretty-json-parsers"}}},"pageContext":{"id":"540fcbab-3562-5087-9f86-71daa07283ef","refWordMdxSlugDict":{}}},"staticQueryHashes":["2221750479","2380733210","2768355698","63159454","847517413"]}