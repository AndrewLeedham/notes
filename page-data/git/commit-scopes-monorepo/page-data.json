{"componentChunkName":"component---node-modules-gatsby-theme-kb-src-templates-topic-js","path":"/git/commit-scopes-monorepo","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Commit Messages With Monorepo Scopes\"), mdx(\"p\", null, \"I'm \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://artsy.github.io/blog/2016/03/02/Lazily-Automation/\"\n  }, \"lazy\"), \" - when I see my friends doing things I want to do but I know I can't be bothered to put the work in, I just automate a rough approximation. \"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/alloy/flow2dts/commits?author=alloy\"\n  }, \"@alloy\"), \" nearly always marks his commits with a context, e.g.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"[overrides] Add Dimensions typings\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"[package] Actually use our own generated files\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"[polyfill] Make $TypeOf also return the class\"))), mdx(\"p\", null, \"This is cool, yeah, but I'm not going to remember to do this. Instead what I've been doing is automating that via git hooks.\"), mdx(\"p\", null, \"As I'm mostly in JS projects, I use \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.npmjs.com/package/husky/v/4.3.8\"\n  }, \"husky v4\"), \" to set up my hooks:\"), mdx(\"pre\", {\n    \"className\": \"shiki\",\n    \"style\": {\n      \"backgroundColor\": \"#fff\",\n      \"color\": \"black\"\n    }\n  }, mdx(\"div\", {\n    parentName: \"pre\",\n    \"className\": \"language-id\"\n  }, \"json\"), mdx(\"div\", {\n    parentName: \"pre\",\n    \"className\": \"code-container\"\n  }, mdx(\"code\", {\n    parentName: \"div\"\n  }, mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"{\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"  \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#005CC5\"\n    }\n  }, \"\\\"husky\\\"\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \": {\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"    \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#005CC5\"\n    }\n  }, \"\\\"hooks\\\"\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \": {\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"      \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#005CC5\"\n    }\n  }, \"\\\"pre-commit\\\"\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \": \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"\\\"yarn test && yarn danger local --dangerfile dangerfile.local.ts --staging\\\"\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \",\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"      \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#005CC5\"\n    }\n  }, \"\\\"pre-push\\\"\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \": \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"\\\"yarn build && yarn test\\\"\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \",\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"      \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#005CC5\"\n    }\n  }, \"\\\"prepare-commit-msg\\\"\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \": \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"\\\"node scripts/prefixCommitMsg.mjs\\\"\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"    }\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"  },\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"}\"))))), mdx(\"p\", null, \"The key one being \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"prepare-commit-msg\"), \" which runs a JS script:\"), mdx(\"pre\", {\n    \"className\": \"shiki twoslash lsp\",\n    \"style\": {\n      \"backgroundColor\": \"#fff\",\n      \"color\": \"black\"\n    }\n  }, mdx(\"div\", {\n    parentName: \"pre\",\n    \"className\": \"code-container\"\n  }, mdx(\"code\", {\n    parentName: \"div\"\n  }, mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6A737D\"\n    }\n  }, \"/// <\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#22863A\"\n    }\n  }, \"reference\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6A737D\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6F42C1\"\n    }\n  }, \"types\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"=\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"\\\"node\\\"\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6A737D\"\n    }\n  }, \" /> \")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6A737D\"\n    }\n  }, \"// @ts-check\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"import\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(alias) module &quot;fs&quot;&#13;import fs\"\n  }, \"fs\"), \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"from\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"\\\"fs\\\"\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"import\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" { \", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(alias) function execSync(command: string): Buffer (+3 overloads)&#13;import execSync\"\n  }, \"execSync\"), \" } \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"from\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"\\\"child_process\\\"\")), \"\\n\", mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"const\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#005CC5\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"const fileToEdit: string\"\n  }, \"fileToEdit\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"=\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"var process: NodeJS.Process\"\n  }, \"process\"), \".\", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(property) NodeJS.Process.env: NodeJS.ProcessEnv\"\n  }, \"env\"), \".\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#005CC5\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"string\"\n  }, \"HUSKY_GIT_PARAMS\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \".\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6F42C1\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(method) String.split(separator: string | RegExp, limit?: number): string[] (+1 overload)\"\n  }, \"split\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"\\\" \\\"\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \")[\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#005CC5\"\n    }\n  }, \"0\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"]\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"const\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#005CC5\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"const files: string\"\n  }, \"files\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"=\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6F42C1\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(alias) execSync(command: string, options?: ExecSyncOptionsWithStringEncoding): string (+3 overloads)&#13;import execSync\"\n  }, \"execSync\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"\\\"git status --porcelain\\\"\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \", { \", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(property) ExecSyncOptionsWithStringEncoding.encoding: BufferEncoding\"\n  }, \"encoding\"), \": \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"\\\"utf8\\\"\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" })\")), \"\\n\", mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"const\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#005CC5\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"const maps: {&#13;    &quot;spelltower/&quot;: string;&#13;    &quot;typeshift/&quot;: string;&#13;}\"\n  }, \"maps\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"=\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" {\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"  \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"\\\"spelltower/\\\"\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \": \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"\\\"SPTWR\\\"\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \",\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"  \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"\\\"typeshift/\\\"\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \": \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"\\\"TPSFT\\\"\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \",\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"}\")), \"\\n\", mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"const\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#005CC5\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"const prefixes: Set&lt;any>\"\n  }, \"prefixes\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"=\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"new\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#005CC5\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"var Set: SetConstructor&#13;new &lt;any>(iterable?: Iterable&lt;any>) => Set&lt;any> (+1 overload)\"\n  }, \"Set\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"()\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"const files: string\"\n  }, \"files\"), \".\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6F42C1\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(method) String.split(separator: string | RegExp, limit?: number): string[] (+1 overload)\"\n  }, \"split\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"\\\"\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#005CC5\"\n    }\n  }, \"\\\\n\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"\\\"\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \").\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6F42C1\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(method) Array&lt;string>.forEach(callbackfn: (value: string, index: number, array: string[]) => void, thisArg?: any): void\"\n  }, \"forEach\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#E36209\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(parameter) f: string\"\n  }, \"f\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"=>\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" {\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"  \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"const\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#005CC5\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"const found: string\"\n  }, \"found\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"=\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#005CC5\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"var Object: ObjectConstructor\"\n  }, \"Object\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \".\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6F42C1\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(method) ObjectConstructor.keys(o: {}): string[] (+1 overload)\"\n  }, \"keys\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"(\", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"const maps: {&#13;    &quot;spelltower/&quot;: string;&#13;    &quot;typeshift/&quot;: string;&#13;}\"\n  }, \"maps\"), \").\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6F42C1\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(method) Array&lt;string>.find(predicate: (value: string, index: number, obj: string[]) => unknown, thisArg?: any): string (+1 overload)\"\n  }, \"find\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#E36209\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(parameter) prefix: string\"\n  }, \"prefix\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"=>\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(parameter) f: string\"\n  }, \"f\"), \".\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6F42C1\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(method) String.includes(searchString: string, position?: number): boolean\"\n  }, \"includes\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"(\", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(parameter) prefix: string\"\n  }, \"prefix\"), \"))\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"  \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"if\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" (\", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"const found: string\"\n  }, \"found\"), \") \", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"const prefixes: Set&lt;any>\"\n  }, \"prefixes\"), \".\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6F42C1\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(method) Set&lt;any>.add(value: any): Set&lt;any>\"\n  }, \"add\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"(\", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"const maps: {&#13;    &quot;spelltower/&quot;: string;&#13;    &quot;typeshift/&quot;: string;&#13;}\"\n  }, \"maps\"), \"[\", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"const found: string\"\n  }, \"found\"), \"])\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"})\")), \"\\n\", mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"if\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" (\", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"const prefixes: Set&lt;any>\"\n  }, \"prefixes\"), \".\", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(property) Set&lt;any>.size: number\"\n  }, \"size\"), \") {\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"  \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"const\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#005CC5\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"const prefix: string\"\n  }, \"prefix\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"=\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" [\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"...\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"const prefixes: Set&lt;any>\"\n  }, \"prefixes\"), \".\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6F42C1\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(method) Set&lt;any>.values(): IterableIterator&lt;any>\"\n  }, \"values\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"()].\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6F42C1\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(method) Array&lt;any>.sort(compareFn?: (a: any, b: any) => number): any[]\"\n  }, \"sort\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"().\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6F42C1\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(method) Array&lt;any>.join(separator?: string): string\"\n  }, \"join\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"\\\", \\\"\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \")\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"  \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"const\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#005CC5\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"const msg: string\"\n  }, \"msg\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"=\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" \", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(alias) module &quot;fs&quot;&#13;import fs\"\n  }, \"fs\"), \".\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6F42C1\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"function readFileSync(path: string | number | Buffer | URL, options: &quot;utf8&quot; | &quot;ascii&quot; | &quot;utf-8&quot; | &quot;utf16le&quot; | &quot;ucs2&quot; | &quot;ucs-2&quot; | &quot;base64&quot; | &quot;latin1&quot; | &quot;binary&quot; | &quot;hex&quot; | {&#13;    encoding: BufferEncoding;&#13;    flag?: string;&#13;}): string (+2 overloads)\"\n  }, \"readFileSync\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"(\", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"const fileToEdit: string\"\n  }, \"fileToEdit\"), \", \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"\\\"utf8\\\"\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \")\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"  \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"if\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \" (\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#D73A49\"\n    }\n  }, \"!\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"const msg: string\"\n  }, \"msg\"), \".\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6F42C1\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(method) String.includes(searchString: string, position?: number): boolean\"\n  }, \"includes\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"(\", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"const prefix: string\"\n  }, \"prefix\"), \")) {\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"    \", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"(alias) module &quot;fs&quot;&#13;import fs\"\n  }, \"fs\"), \".\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#6F42C1\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"function writeFileSync(path: string | number | Buffer | URL, data: string | Uint8Array | Uint8ClampedArray | Uint16Array | Uint32Array | ... 7 more ... | DataView, options?: fs.WriteFileOptions): void\"\n  }, \"writeFileSync\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"(\", mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"const fileToEdit: string\"\n  }, \"fileToEdit\"), \", \"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"`[${\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"const prefix: string\"\n  }, \"prefix\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"}] ${\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, mdx(\"data-lsp\", {\n    parentName: \"span\",\n    \"lsp\": \"const msg: string\"\n  }, \"msg\")), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#032F62\"\n    }\n  }, \"}`\"), mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \")\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"  }\")), mdx(\"div\", {\n    parentName: \"code\",\n    \"className\": \"line\"\n  }, mdx(\"span\", {\n    parentName: \"div\",\n    \"style\": {\n      \"color\": \"#24292E\"\n    }\n  }, \"}\"))), mdx(\"a\", {\n    parentName: \"div\",\n    \"href\": \"https://www.typescriptlang.org/play/#code/PTAEAEGcBcCcEsDG0BcoBmBDANpApgFAhgA8se6e5AdonqNAJ4AOekAvAETUD2AJnk6hgAPlBEw4aJAC0iABZ5EAawLwAtsx6xoGSBlg91oTukic1m7boDeoPAA8lAZUa1QAXwNGTC+Nj4AfWZDOkhzAgJEHmoYDH88ABUeAFE+eF12UBCeMMgAOjxqADd8gAkAVWcAaQBNQIBxAElEwIAFAEEAJQ6AWWd8yGZsDIAKIU4ASgBtAAYAXSiYuPQE-SzHFzdEcYBzDNAYTGgAV30ZGS1YOmxMeGpOABpQOyLo9OpdtE4T6HQADiEHkmkWisV06kwzHWLwIoBMQzw2Gw0B4AHcqMBON9nG1EgB1LpPOEmJisSDyeDoaBY76JNrOABiiWJHlBy10IQo8CcMOoeDRoGceGgoxBq2wbEGwzGnAAOg9Jvl0NoUpgFKN0KB2GIbCSwSseCdqHxtaAAPIAIwAVkpoPllHhGJBRpDoUrVibRlzVg5tWJ0Pl7ohsCcBC6fTzJiD4VTQJqjSbJtlyL6pZg+HxXVDINMVca+PMQcDInHvameVLIPAAF54ZN6+EGzkVv1Zab5TuR3n5Yo4E5sMXzQbWMX5a08e7jZ5TfUc0DqSC7M1mfLkDOMhKuWiahLJNIZGe-AGz2Na0YAQkXuyDtFD4fL3Ic0dh8Phq7RCGgeE3ku3OwlJJUnSaBngAA2mAASGxuw8eZQGg68PDAmNPAIDwgA\"\n  }, \"Try\"))), mdx(\"p\", null, \"This JS script looks up what files were changed in the commit (via \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"git status\"), \"), and then adds a set of prefixes to the commit message.\"), mdx(\"p\", null, \"E.g. I make a change to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"games/spelltower/app.ts\"), \" then \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"[SPTWR]\"), \" is automatically added to commit message. \"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"","private":false},"outboundReferences":[],"inboundReferences":[]},"fields":{"slug":"/git/commit-scopes-monorepo","title":"Commit Messages With Monorepo Scopes"}}},"pageContext":{"id":"d3478557-490b-550c-804a-1bd6a402d641"}},"staticQueryHashes":["2221750479","2380733210","2768355698","433046095","63159454"]}